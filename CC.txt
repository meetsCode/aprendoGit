# Tercera lección
En esta tercera lección intento afianzar y enlazar los dos conceptos anteriores.  
Tenemos por una parte un directorio de trabajo (_Working copy_), otro donde guardo todas las versiones de mi trabajo (_Repository_) y un directorio temporal entre medio que por ahora molesta más de lo que aporta (_Staging area_).  
Por si a alguien le aclara podríamos decir que los _commits_ guardados en el _repository_ son como fotos congeladas de mi trabajo en el _Working copy_.  

Esas copias o instantáneas son para no preocuparme si al final borro algo por error. Si está en alguna versión antigua del repositorio puedo recuperar ese fichero o ficheros. Hay que darse cuenta que si decido viajar a una versión anterior del repositorio modifico el _Working copy_. Eso es lo que hemos hecho con el comando `$ git reset --hard <nombreDeVersión>` . Este detalle es importante. 

Te sonará porque es ese el comando que usas para viajar de lección en lección. Así para leer cada nueva lección viajabas a un commit distinto y por lo tanto en el _Working copy_ aparecen nuevos ficheros.  

Esto ya es muy útil por sí solo. Ahora puedo borrar y modificar contenido a placer y sin miedo a perder información siempre que vaya haciendo commits periódicamente. Sin ser muy imaginativo la manera de recuperar parte de la información perdida sería viajar al pasado con el comando `git reset --hard` encontrar lo que luego borré, copiarlo en el portapapeles, volver al presente con el mismo comando e insertar lo que dejé en el portapapeles.  
En realidad esto no es nada elegante pero funciona. La clave aquí está en saber navegar por el histórico de commits. Es decir, usar correctamente el comando `git reset` y naturalmente saber el nombre de mis commits.  
En los siguientes apartados vamos a aprender precisamente a ver el nombre de nuestros commits pasados, su fecha de creación, autor y otros datos útiles. En definitiva vamos a conocer el histórico y su representación como grafo.  
Mucho más adelante veremos formas más elegantes de recuperar mi trabajo que no sea copiar en el portapapeles.

## Siguiente paso: ir al commit DD 
El siguiente paso nos vuelve a modificar nuestro _working copy_
```bash
$ git checkout HEAD     # para borrar todo lo que pudiste toquetear.
$ git reset --hard DD   # para subir a la siguiente lección.
$ ls                    # para el contenido del directorio y ver los cambios.
AA.txt		BB.txt		CC.txt		DD.txt	LICENSE		README.md
```










